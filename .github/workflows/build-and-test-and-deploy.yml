name: Build and Test and Deploy

on:
  push:
    branches:
      - KillYourMaster
  pull_request:

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Cache Node dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ env.cache-name }}-${{ hashFiles('package-lock.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ env.cache-name }}-
            ${{ runner.os }}-npm-

      - name: Cache Node Build artifacts
        uses: actions/cache@v3
        with:
          path: ./.cache
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('lib/**/*', 'package-lock.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-

      - name: Cache Browser Build artifacts
        uses: actions/cache@v3
        with:
          path: ./.parcel-cache
          key: ${{ runner.os }}-browser-${{ env.cache-name }}-${{ hashFiles('client/**/*', 'package-lock.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-browser-${{ env.cache-name }}-
            ${{ runner.os }}-browser-

      - name: Install dependencies
        run: npm ci

      - name: Build the application
        run: npm run build

      - name: Test the application
        run: |
          npx arc hydrate
          npm test

      - name: Deploy the application
        if: github.ref == 'refs/heads/KillYourMaster'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          HOSTNAME: ${{ secrets.HOSTNAME }}
        run: npm run deploy:production
